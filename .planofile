from skewer import *

@command(name="run")
def run_(app):
    build(app)

    with working_dir("order-processor"):
        order1 = start("python3 main.py")
        order2 = start("python3 main.py")

    with working_dir("market-data"):
        data1 = start("python3 main.py")

    with working_dir("market-maker"):
        maker1 = start("python3 main.py")
        maker2 = start("python3 main.py")

    with working_dir("frontend"):
        frontend1 = start("python3 main.py")

        with working_env(HTTP_PORT=8081):
            frontend2 = start("python3 main.py")

    try:
        while True:
            sleep(86400)
    finally:
        kill(order1)
        kill(order2)
        kill(data1)
        kill(maker1)
        kill(maker2)
        kill(frontend1)
        kill(frontend2)

@command
def build(app):
    for dir in ("frontend", "order-processor", "market-data", "market-maker"):
        copy("python/data.py", join(dir, "data.py"))

@command
def clean(app):
    for dir in find(".", "__pycache__"):
        remove(dir)

@command
def generate(app):
    """
    Generate README.md from the data in skewer.yaml
    """
    generate_readme("skewer.yaml", "README.md")

@command
def render(app):
    """
    Render README.html from the data in skewer.yaml
    """
    check_program("pandoc")

    generate(app)

    run(f"pandoc -o README.html README.md")

    print(f"file:{get_real_path('README.html')}")

@command
def test(app):
    generate_readme("skewer.yaml", make_temp_file())
    run_steps_on_minikube("skewer.yaml")

@command
def test_external(app, public_kubeconfig, private_kubeconfig):
    run_steps_external("skewer.yaml", public=public_kubeconfig, private=private_kubeconfig)
